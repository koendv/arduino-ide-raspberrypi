commit 94f6b0dfaf5d5871d56d27a2bda0205a61f1e261
Author: Koen De Vleeschauwer <kdv@kdvelectronics.eu>
Date:   Fri Jun 30 19:31:14 2023 +0200

    arm64

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 28e07c6..28549c2 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -39,17 +39,18 @@ jobs:
     strategy:
       matrix:
         config:
-          - os: windows-2019
-            certificate-secret: WINDOWS_SIGNING_CERTIFICATE_PFX # Name of the secret that contains the certificate.
-            certificate-password-secret: WINDOWS_SIGNING_CERTIFICATE_PASSWORD # Name of the secret that contains the certificate password.
-            certificate-extension: pfx # File extension for the certificate.
-          - os: ubuntu-20.04
-          - os: macos-latest
-            # APPLE_SIGNING_CERTIFICATE_P12 secret was produced by following the procedure from:
-            # https://www.kencochrane.com/2020/08/01/build-and-sign-golang-binaries-for-macos-with-github-actions/#exporting-the-developer-certificate
-            certificate-secret: APPLE_SIGNING_CERTIFICATE_P12
-            certificate-password-secret: KEYCHAIN_PASSWORD
-            certificate-extension: p12
+#          - os: windows-2019
+#            certificate-secret: WINDOWS_SIGNING_CERTIFICATE_PFX # Name of the secret that contains the certificate.
+#            certificate-password-secret: WINDOWS_SIGNING_CERTIFICATE_PASSWORD # Name of the secret that contains the certificate password.
+#            certificate-extension: pfx # File extension for the certificate.
+#          - os: ubuntu-20.04
+#          - os: macos-latest
+#            # APPLE_SIGNING_CERTIFICATE_P12 secret was produced by following the procedure from:
+#            # https://www.kencochrane.com/2020/08/01/build-and-sign-golang-binaries-for-macos-with-github-actions/#exporting-the-developer-certificate
+#            certificate-secret: APPLE_SIGNING_CERTIFICATE_P12
+#            certificate-password-secret: KEYCHAIN_PASSWORD
+#            certificate-extension: p12
+          - os: self-hosted
     runs-on: ${{ matrix.config.os }}
     timeout-minutes: 90
 
@@ -64,6 +65,7 @@ jobs:
           registry-url: 'https://registry.npmjs.org'
 
       - name: Install Python 3.x
+        if: matrix.config.os != 'self-hosted'
         uses: actions/setup-python@v4
         with:
           python-version: '3.x'
@@ -128,6 +130,10 @@ jobs:
             name: Linux_X86-64_zip
           - path: '*Linux_64bit.AppImage'
             name: Linux_X86-64_app_image
+          - path: '*Linux_arm64.zip'
+            name: Linux_arm64_zip
+          - path: '*Linux_arm64.AppImage'
+            name: Linux_arm64_app_image
           - path: '*macOS_64bit.dmg'
             name: macOS_dmg
           - path: '*macOS_64bit.zip'
diff --git a/arduino-ide-extension/src/test/node/boards-service-impl.slow-test.ts b/arduino-ide-extension/src/test/node/boards-service-impl.slow-test.ts
index de243d2..557de7b 100644
--- a/arduino-ide-extension/src/test/node/boards-service-impl.slow-test.ts
+++ b/arduino-ide-extension/src/test/node/boards-service-impl.slow-test.ts
@@ -20,6 +20,7 @@ describe('boards-service-impl', () => {
 
   describe('search', () => {
     it('should run search', async function () {
+      this.timeout(20_000);
       const result = await boardService.search({});
       expect(result).is.not.empty;
     });
diff --git a/arduino-ide-extension/src/test/node/test-bindings.ts b/arduino-ide-extension/src/test/node/test-bindings.ts
index 30d8513..c83ef9a 100644
--- a/arduino-ide-extension/src/test/node/test-bindings.ts
+++ b/arduino-ide-extension/src/test/node/test-bindings.ts
@@ -409,7 +409,7 @@ export async function startDaemon(
   configService.onStart();
   daemon.onStart();
   await Promise.all([
-    waitForEvent(daemon.onDaemonStarted, 10_000),
+    waitForEvent(daemon.onDaemonStarted, 20_000),
     coreClientProvider.client,
   ]);
   if (startCustomizations) {
